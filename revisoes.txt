22/09: fiz minha primeira revisão de reduce e aprendi sobre o http em django  

23/09: fiz minha primeira revisão sobre o protocolo HTTP(não tem necessidade de revisar mais vezes porque é apenas teoria)  e aprendi sobre instancia 
única e instancia nova em JavaScript 

24/09: fiz minha primeira revisão de instancia unica e instancia nova em node no estudo de JavaScript e aprendi sobre apps em Django

25/09: fiz minha primeira revisão de apps em django (não tem necessidade de revisar mais vezes porque é apenas teoria), aprendi sobre o global 
em JavaScript e também  o this em JavaScript 

27/09: fiz minha primeira revisão sobre o global em JavaScript e também o this em JavaScript 

28/09: aprendi um pouco sobre renderização de templates em Django

01/10: aprendi sobre como passar parâmetros entre módulos em node(JavaScript)

02/10: fiz minha segunda revisão de reduce e continuei minha lógica do exercicio do dia anterior

03/10: segundas revisões de instancia única e nova, e global

04/10: revisão do this e continuei um pouco mais na aula de templates

05/10: fiz um pouco da aula de deps e scripts em JavaScript

06/10: fiz quase tudo da aula de templates e renderização de HTML no Django

07/10: terminei aula de deps e scripts e aprendi o appendfile sozinho(não precisa revisar, só fiz isso pra ver se conseguia aprender algo sozinho só com a documentação)

08/10: aprendi um pouco sobre ler arquivo em JavaScript e terminei aula de templates e renderização de HTML no Django

09/10: fiz aula da função render em Django e dei uma olhada no projeto recipes 

10/10: Quase terminei a aula de ler arquivos com node em JavaScript(aprendi a usar o ReadFileSync e ReadFile)

11/10: Revisei ReadFileSync e ReadFile em JavaScript e aprendi a usar o font-awesome no projeto recipes de Django(não precisa revisar porque não é django, é apenas um site útil)

12/10: Aprendi a ler pastas em node(usando readdir e readdirSync) e também aprendi a escrever arquivos em node(usando writeFile e writeFileSync)

14/10: revisei readdir, readdirSync, writeFile e writeFileSync em JavaScript, e começei a arrumar meu HTML pro projeto recipes em Django

15/10: revisei deps e scripts em JavaScript e a aula de renderização de templates em Django, e decidi que vou terminar a seção de node(aprendendo um pouco de Express.js)

16/10: continuei no projeto recipes, e decidi que vou apenas copiar e colar o HTML e CSS, porque não vale apena ficar perdendo tempo com isso, eu ainda não aprendi flexbox e grid layout então tudo que eu for fazer eu vou apenas estar copiando o que eu vejo, assim não adianta!

17/10: aprendi um pouco do padrão middleware, e começei a fazer meu próprio exemplo com ele(ainda não acabei), e descobri o eval

20/10: revisei a aula de templates e renderização de HTML em Django e revisei aula do render também em Django

23/10: revisei toda a aula de ler arquivos em node(readFileSync, readFile, readdirSync, readdir) e escrever arquivos em node(writeFileSync, writeFile) em JavaScript

25/10: começei outro exemplo em JavaScript na aula de padrão middleware parte 2

26/10: aprendi o que são arquivos estáticos e CDNs(a parte teórica, não precisa revisar) no estudo de Django

27/10: começei um exemplo cabuloso pra usar o eval em JavaScript, continuar amanhã como se fosse uma revisão

28/10: terminei meu exemplo com o eval(não precisa revisar) em JavaScript e aprendi a usar arquivos estáticos nos meus templates em Django

29/10: quase acabei meu exemplo de padrão middleware(vou adicionar mais um middleware e ver o que aconteçe se trocar os 3 de ordem) e revisei como usar arquivos estáticos nos meus templates em Django

31/10: revisei o reduce em JavaScript e começei a revisar(mas não acabei) as instâncias novas também em JavaScript, continuar as revisões amanhã

01/11: revisei instancia única e instancia nova em JavaScript, também sobre apps em Django, e começei a revisar o global e o this em JavaScript(não acabei), CONTINUAR AMANHÃ

02/11: revisei o global em JavaScript(no node) e os valores do this em node em diferentes situações, revisar como passar parâmetros entre módulos em node. Amanhã e ver se tem mais alguma coisa

04/11: revisei como passar parâmetros entre módulos em node

09/11: revisei deps e scripts, AMANHÃ REVISAR A AULA DE TEMPLATES E RENDERIZAÇÃO DE HTML E A DA FUNÇÃO RENDER EM DJANGO, DAÍ SEGUIR EM FRENTE NOS ESTUDOS

10/11: revisei a aula de templates e renderização de HTML e a da função render em Django, e aprendi a criar mais diretórios de static files na aula de STATIC_URL e  STATICFILES_DIRS também em Django
 
11/11: revisei a aula de STATIC_URL e STATICFILES_DIRS em Django, e começei o exemplo de padrão middleware de novo(fazia muito tempo que não mexia com o outro) em JavaScript, continuar com ele no próximo estudo de JavaScript

12/11: aprendi STATIC_ROOT e collectstatic, e também fiz o teste 7 de arquivos estáticos em Django. continuei meu exemplo de padrão middleware em JavaScript(falta fazer a função exec).

13/11: revisei STATIC_ROOT e collectstatic em Django, e terminei meu exemplo com padrão middleware em JavaScript.

14/11: aprendi a passar mais um parâmetro para as funções view(aula 42. Uma nova URL para uma nova View - sobre URLs no Django) em Django, continuar nessa aula no próximo estudo de Django. Deixei meu exemplo com padrão middleware muito mais simples em JavaScript, encerrando esse assunto.

15/11: revisei como passar mais um parâmetro para as funções view(aula 42. Uma nova URL para uma nova View - sobre URLs no Django) em Django. Instalei o Postman e entendi o conceito endereço IP e porta no estudo de JavaScript, continuar na aula 1 da API com Express no próximo estudo de JavaScript.

16/11: acabei a aula "42. Uma nova URL para uma nova View - sobre URLs", aprendendo a passar um parâmetro de um determinado tipo à função view, e começei na aula "44. Herança em templates e template blocks" no estudo de Django

17/11: iniciei o projeto com Express(na aula 168) no estudo de JavaScript

18/11: aprendi a usar os block(aulas 44 e 45) em Django

19/11: terminei a primeira aula da API com express(aula 168) em JavaScript

22/11: revisei STATIC_URL, STATICFILES_DIRS, STATIC_ROOT, collectstatic, a aula de como passar mais de um parâmetro para uma função view(aula 42) em Django

23/11: revisei padrão middleware, fs.readFileSync e o fs.readFile em node no estudo de JavaScript, continuar as terceiras revisões amanhã

24/11: revisei fs.readdirSync, fs.readdir, fs.writeFileSync, fs.writeFile em node, começar aula "46. Injetando dados na lista da view Home" em django amanhã

25/11: fiz uma parte da aula "46. Injetando dados na lista da view Home" em Django.

27/11: fiz uma parte da segunda aula da API com express(aula 169) em JavaScript.

30/11: fiz a segunda revisão dos blocks em Django.

01/12: quase terminei a aula "46. Injetando dados na lista da view Home" em Django, aprendendo nela a usar o for em Django(acho que não precisa revisar porque é um comando muito básico e simples, além de ser idêntico ao for do Python).

02/12: quase terminei a segunda aula da API com Express(aula 169) no estudo de JavaScript

04/12: terminei a aula "46. Injetando dados na lista da view Home", e agora estou tentando deixar todas as caixas de receitas do mesmo tamanho usando o overflow, tudo no estudo de Django.

05/12: quase terminei a terceira aula da API com Express(aula 171) no estudo de JavaScript

06/12: consegui deixar todos os cards do mesmo tamanho no projeto recipes de Django

07/12: terminei a API com Express no estudo de JavaScript

08/12: adicionei as imagens ao projeto recipes e fiz todas as alterações necessárias pra deixar todos os cards do mesmo tamanho com imagens no estudo de Django

09/12: aprendi a usar o módulo node-schedule do node e vi um pouco da última aula da seção de node no estudo de JavaScript.Em Django quase terminei a aula '48. Trabalhando nas diferenças entre detail page e list page', aprendendo a usar o if em Django, agora preciso arrumar a altura do card de receitas da página de detalhes e fazer algumas alterações no CSS dele

12/12: fiz a aula "174. Process: Entrada e Saída Padrão", a última aula da seção de Node em JavaScript.

13/12: arrumei a altura do card de receitas da página de detalhes e fiz algumas alterações no CSS dele em Django

14/12: fiz a revisão das aulas 90, 91, 92 e 93 em JavaScript.

15/12: fiz o teste 8 e começei a aula "49. Nome único nas URLs e app_name para Namespace"(ainda não terminei) em Django.

16/12: revisei a aula 94 em JavaScript. fiz a aula "49. Nome único nas URLs e app_name para Namespace", aprendendo a usar o name nos paths, o app_name e a colocar urls em links, tudo em Django

17/12: revisei as aulas 95, 96, 97 em JavaScript

18/12: fiz um pouco da aula "51. Primeiro Django Model e seus atributos" em Django(só assisti ele fazendo, não coloquei a mão na massa).

19/12: revisei as aulas 98, 99

20/12: fiz a aula "51. Primeiro Django Model e seus atributos" por inteiro em Django.

21/12: revisei as aulas 100, 101, 102, 103 em JavaScript.

22/12: fiz metade da aula "52. makemigrations e migrate - Aplicando as migrações" em Django.

23/12: revisei as aulas 104, 105, 106, 107, 108 em JavaScript

24/12: fiz a aula "52. makemigrations e migrate - Aplicando as migrações" e iniciei "Teste 9: Sobre a criação de Models." em Django.

26/12: revisei as aulas 109, 110 em JavaScript.

27/12: completei o "Teste 9: Sobre a criação de Models." e fiz boa parte da aula "54. Registrando category na admin do Django" em Django.

05/01: revisei a aula 111 em JavaScript(não tinha entendido quando fiz a primeira vez, então demorei bastante nessa aula)

08/01: fiz mais uma parte da aula "54. Registrando category na admin do Django"(entendi o ModelAdmin) em Django.

09/01: revisei as aulas 112, 114, 115 em JavaScript.

11/01: terminei a aula "54. Registrando category na admin do Django" e começei a "55. Adicionando Recipes na admin do Django" em Django.

14/01: revisei as aulas 116, 117, 118 em JavaScript.

16/01: continuei na aula "55. Adicionando Recipes na admin do Django", começando meus estudos nos decorators do Python, tudo no meu estudo de Django.

24/01: revisei um pouco da aula "119. Getters/Setters" em JavaScript

25/01: continuei na aula "55. Adicionando Recipes na admin do Django", mas esqueci de continuar os estudos nos decorators do Python, preciso continuar isso no próximo estudo.

26/01: terminei de revisar a aula "119. Getters/Setters" e revisei um pouco da aula "120. Funções Importantes de Objeto" em JavaScript.

06/02: continuei na aula "55. Adicionando Recipes na admin do Django" em Django, mas esqueci de continuar os estudos nos decorators do Python, preciso continuar isso no próximo estudo.
 
07/02: revisei um pouco da aula "120. Funções Importantes de Objeto" em JavaScript.

10/02: continuei na aula "55. Adicionando Recipes na admin do Django" e aprendi a usar decorators em Python, isso no estudo de Django.

11/02: revisei as aulas 120, 121 em JavaScript.

12/02: quase terminei a aula "55. Adicionando Recipes na admin do Django" em Django.

19/02: revisei as aulas 122, 123, 124 em JavaScript.

20/02: terminei a aula "55. Adicionando Recipes na admin do Django" e iniciei a aula "56. Conhecendo o Django Shell e manipulando QuerySets com ele" em Django.

21/02: revisei a aula 125 em JavaScript.

22/02: começei a revisar a aula 126 em JavaScript.

25/02: dei uma breve iniciada na aula "56. Conhecendo o Django Shell e manipulando QuerySets com ele" em Django, mas foi bem pouco, preciso estudar Django amanhã.

26/02: estudei um pouquinho de Django de novo.

28/02: revisei as aulas 126, 127 em JavaScript.

08/03: fiz mais um pouco da aula "56. Conhecendo o Django Shell e manipulando QuerySets com ele" em Django.

12/03: revisei a aula 128 em JavaScript.

14/03: terminei a aula "56. Conhecendo o Django Shell e manipulando QuerySets com ele", e começei a assistir(ainda não botei a mão na massa) a aula "58. Usando o model Recipe real (com QuerySet) na view home" em Django.

19/03: revisei as aulas 129, 130 em JavaScript.

21/03: fiz uma parte da aula "58. Usando o model Recipe real (com QuerySet) na view home" em Django, preciso resolver a questão "de onde" saiu o first_name e last_name das minhas receitas.

31/03: revisei as aulas 178 em JavaScript.

01/04: revisei as aulas 179, 180 em JavaScript.

02/04: fiz mais uma parte da aula "58. Usando o model Recipe real (com QuerySet) na view home" em Django.

06/04: revisei as aulas 181, 182, 183, e um pouco da 184 em JavaScript.

15/04: fiz mais uma parte da aula "58. Usando o model Recipe real (com QuerySet) na view home" em Django.

23/04: revisei um pouco de Promises em JavaScript;

12/05: terminei a aula "58. Usando o model Recipe real (com QuerySet) na view home" em Django.

13/05: fiz o desafio de promises no JavaScript.

15/05: terminei a aula "59. Ocultando receitas que não estão publicadas (filter para is_published)" e "60. Corrigindo category com blank True e default None" em Django.

17/05: revisei async e await em JavaScript, terminando, assim, a seção de ESNext.

19/05: terminei a aula "61. Corrigindo autor nulo" e "Teste 11: Django User Model", e metade da aula "62. Mostrando erro 404 Not Found para páginas que não existem" em Django.

20/05: começei minha jornada nas seções de Web em JavaScript.

21/05: terminei a aula "199. Introdução à Web", e treinei boa parte do conteúdo da aula "279. Selecionando Elementos #01"(veja a aula porque ele passa uns negócios interessantes que ainda não fiz) em JavaScript.

25/05: estudei 30 minutos de Django, então vou continuar nele amanhã porque foi muito pouco.

27/05: terminei a aula "62. Mostrando erro 404 Not Found para páginas que não existem" em Django.

28/05: terminei a aula "279. Selecionando Elementos #01", e fiz boa parte da aula "200. Protocolo HTTP" em JavaScript.

02/06: terminei a aula "63. Usando o shortcut get_list_or_404 (atalho)" e "64. Mostrando a página de detalhes da receita" em Django.

03/06: terminei a aula "280. Selecionando Elementos #02", também a aula "200. Protocolo HTTP", e fiz um pouco da aula ""202. Servidor Web" em JavaScript.

04/06: terminei a aula "65. Ajustando o css do modo de preparo" em Django.

06/06: terminei a aula "202. Servidor Web" e "203. Client Side vs Server Side" em JavaScript.

07/06: terminei a aula "66. Usando get_object_or_404 ao invés de fazer a consulta na mão" e fiz um pouco da "67. Usar get_list_or_404 na home ou não?" em Django.

08/06: fiz boa parte da aula "281. Selecionando Elementos #03" em JavaScript.

09/06: prossegui na aula "67. Usar get_list_or_404 na home ou não?" em Django.

10/06: terminei a aula "281. Selecionando Elementos #03" e vi a aula "282. Selecionando Elementos #04"(ainda não botei a mão na massa) em JavaScript.

11/06: terminei as aulas "69. Renomeando um projeto Django inteiro", "70. Internacionalização, Time Zones e Tradução do Django para português - PT-BR", "71. Corrigindo erros de tipagem e linha longa no settings.py", e vi a aula "72. Iniciando com testes no Django com Pytest, Pytest-Django e Unittest"(só vi, ainda preciso botar a mão na massa) em Django.

12/06: terminei a aula "282. Selecionando Elementos #04"(já botei a mão na massa) em JavaScript.

13/06: dei prosseguimento à aula "72. Iniciando com testes no Django com Pytest, Pytest-Django e Unittest" em Django.

14/06: estou quase terminando a aula "283. Acessando Atributos #01" em JavaScript.

15/06: encontrei a solução para o problema dos testes em Django, mas é melhor eu continuar com Django amanhã porque foi só isso. 

17/06: terminei a aula "74. Asserções (afirmações), Django Reverse URL e Pytest-Watch" e "75. Testando Django Reverse URL com argumentos args e kwargs" em Django.

18/06: terminei as aulas "283. Acessando Atributos #01" e "284. Acessando Atributos #02" em JavaScript.

20/06: terminei o teste "Teste 12: Sobre Django testing e typing" em Django.

21/06: terminei as aulas "285. Acessando Atributos #03" e "286. Acessando Classes", e iniciei a aula "287. Modificando HTML #01" em JavaScript.

24/06: fiz boa parte da aula "76. Usando resolve para entender qual view function está sendo usada" em Django.

27/06: terminei a aula "287. Modificando HTML #01", e boa parte da aula "288. Modificando HTML #02" em JavaScript.

29/06: termminei a aula "288. Modificando HTML #02" e iniciei a "289. Trabalhando c/ Eventos #01" em JavaScript.

30/06: terminei a aula "76. Usando resolve para entender qual view function está sendo usada" e iniciei a "77. Separando os testes em um package chamado tests com __init__.py" em Django.

01/07: terminei as aulas "77. Separando os testes em um package chamado tests com __init__.py", "78. Usando self.client do Django para simular o cliente nos testes", e a aula "79. Testando "No recipes found" quando receitas não existem" em Django.

02/07: terminei a aula "289. Trabalhando c/ Eventos #01" em JavaScript.

04/07: quase terminei a aula "80. Testando 404 Not Found quando receitas não existem" em Django.

11/07: fiz boa parte da aula "290. Trabalhando c/ Eventos #02" em JavaScript.

13/07: fiz quase toda a aula "81. Criando fixtures para um teste único (Recipe, Category e Author)" em Django.

15/07: continuei na aula "290. Trabalhando c/ Eventos #02" em JavaScript.

25/07: terminei a aula "81. Criando fixtures para um teste único (Recipe, Category e Author)" e começei na aula "82. Testando o context e content da response no template" em Django.

26/07: terminei a aula "290. Trabalhando c/ Eventos #02" e começei a "291. Trabalhando c/ Eventos #03" em JavaScript.

27/07: continuei na aula "82. Testando o context e content da response no template" em Django.

28/07: terminei a aula "291. Trabalhando c/ Eventos #03" em JavaScript.

29/07: terminei a aula "82. Testando o context e content da response no template" e começei ambas as aulas "83. Criando uma classe de base para os testes" e "84. Extraindo métodos para reutilização na classe de base dos" em Django.

30/07: começei a aula "292. Trabalhando c/ Eventos #04" em JavaScript.

01/08: continuei nas aulas "83. Criando uma classe de base para os testes" e "84. Extraindo métodos para reutilização na classe de base dos" em Django.

02/08: continuei na aula "292. Trabalhando c/ Eventos #04" em JavaScript.

03/08: continuei na aula "84. Extraindo métodos para reutilização na classe de base dos testes" em Django.

05/08: terminei a aula "292. Trabalhando c/ Eventos #04" e começei a aula "294. Flappy Bird #01" em JavaScript. continuei na aula "84. Extraindo métodos para reutilização na classe de base dos testes" em Django.

07/08: continuei na aula "294. Flappy Bird #01" em JavaScript.

08/08: terminei as aulas "84. Extraindo métodos para reutilização na classe de base dos testes" e "85. Falhar testes propositalmente com self.fail ou pular com @skip" em Django.

11/08: terminei a aula "294. Flappy Bird #01" em JavaScript.

12/08: começei a tentativa de fazer o projeto flap bird sozinho em JavaScript. fiz o "Simulado 1: Sobre testes e algumas partes do Django", mas acertei apenas 3 de 7 questões em Django

15/08: começei a aula "295. Flappy Bird #02" em JavaScript.

16/08: terminei a aula "86. Testando se category e detail carregam a receita correta" em Django. 

21/08: continuei na aula "295. Flappy Bird #02" em JavaScript.

23/08: terminei a aula "87. Testando o branch (caminho) "is_published" True e False", mas estou fazendo meu próprio exemplo dela no template da category, continuar aula que vêm. Tudo no Django.

24/08: quase finalisei a aula "295. Flappy Bird #02" em JavaScript. 

25/08: continuei no meu exemplo, consertei certos erros mas ainda não está dando certo, continuar aula que vêm. Seção de estudos do Django.

03/09: terminei a aula "295. Flappy Bird #02" em JavaScript.

04/09: estou quase resolvendo o problema do meu exemplo(na parte do author já encontrei a solução), isso em Django. entendi a parte teórica da aula "296. Flappy Bird #03" em JavaScript.

07/09: terminei a aula "87. Testando o branch (caminho) "is_published" True e False" em Django.

08/09: progredi na aula "296. Flappy Bird #03" em JavaScript.

09/09: terminei a aula "88. Testando is_published em category e recipe", e a parte teórica da "90. Preparando para testar os Models"(na 90 não fiz a parte prática, mas 90% da aula é teoria, a parte prática você pode pegar rápido) em Django.

11/09: progredi na aula "296. Flappy Bird #03" em JavaScript.

12/09: finalisei a aula "296. Flappy Bird #03" em JavaScript.(próximo estudo tem que ser Django sem falta).

13/09: terminei a aula "90. Preparando para testar os Models", e iniciei a aula "91. Testando max_length do model usando self.assertRaises" em Django.

15/09: terminei a aula "297. Flappy Bird #04" em JavaScript.

16/09: terminei a aula "91. Testando max_length do model usando self.assertRaises" e iniciei a "92. Criando testes parametrizados com parameterized" em Django.

18/09: fiz a parte teórica da aula "298. Flappy Bird #05" em JavaScript.

20/09: continuei na aula "298. Flappy Bird #05" em JavaScript.

21/09: continuei na aula "92. Criando testes parametrizados com parameterized" em Django.

23/09: resolvi o problema do sortHeight do projeto Flappy Bird no JavaScript.

26/09: fiz a parte teórica da aula "92-criando testes parametrizados com parameterized" em Django.

27/09: terminei a aula "298. Flappy Bird #05" em JavaScript.

28/09: terminei a aula "92-criando testes parametrizados com parameterized" em Django.

29/09: fiz boa parte da aula "299. Flappy Bird #06" em JavaScript.

30/09: terminei a aula "93. Testando valores default dentro do model (devo testar isso?)" em Django.

03/10: continuei tentando resolver o problema que tive na aula "299. Flappy Bird #06" em JavaScript.

04/10: consegui realizar um exemplo extra de parameterized em Django. Rumo à aula 94 e ao término da seção de testes!

05/10: FINALISEI O FLAPPY BIRD(terminei a aula "299. Flappy Bird #06" em JavaScript.)

07/10: FINALISEI A SEÇÃO DE TESTES(terminei as aulas "94. Adicionando coverage (cobertura de testes)", "95. Testando a string representation da Recipe", "96. Testando o model Category" em Django).

09/10: dei uma breve revisada na seção de Integração de HTML, CSS, e JavaScript, e também iniciei a aula "301. O que é Ajax?" em JavaScript.

11/10: terminei as aulas "97. Duplicando receitas usando python manage.py shell" e "98. Corrigindo campo slug (SlugField) para unique (campo de valor único)", e começei(por enquanto quase terminei a teoria inteira) a aula "99. Criando uma nova URL para search com TDD (Test Driven Development)".

13/10: terminei a aula "302. Implementando server.js" em JavaScript.

21/10: terminei a aula "99. Criando uma nova URL para search com TDD (Test Driven Development)"

22/10: fiz boa parte da aula "303. XMLHttpRequest #01" em JavaScript.

28/10: terminei a aula "100. Criando a search view function com TDD (Test Driven Development)" e a parte teórica da aula "101. Indicando para a view retornar o template correto com TDD" em Django.

01/11: terminei meu código na aula "303. XMLHttpRequest #01", mas não deu certo. Isso em JavaScript. Terminei a aula "101. Indicando para a view retornar o template correto com TDD" em Django.

03/11: problema da aula "303. XMLHttpRequest #01" resolvido e aula finalizada. Fiz boa parte da aula "304. XMLHttpRequest #02" em JavaScript.

04/11: terminei as aulas "102. Sobre o padrão MTV (Model Template View) do Django (Teoria)" e "103. Levantando erro 404 se o termo de busca não for enviado" em Django. 

07/11: terminei a aula "304. XMLHttpRequest #02" e iniciei a aula "305. XMLHttpRequest #03" em JavaScript.

09/11: terminei as aulas "104. Seus teste vão prevenir regressões no seu código (temos erro" e "105. Segurança: Cross-site scripting (XSS)" em Django.

10/11: continuei na aula "305. XMLHttpRequest #03" em JavaScript.

13/11: terminei as aulas "106. Remova aspas que sobram no código", "107. Teste para garantir que search_term será escapado por", "108. Separando os testes de todas as views em grupos separados (Test", e "109. Filtro de campo contains e icontains e consultas complexas com". Também dei inicio à aula "110. Usando Q para mesclar AND e OR com consultas complexas e filtros já" em Django.

14/11: terminei as aulas "305. XMLHttpRequest #03" e estou quase finalizando a aula "306. Fetch API #01" em JavaScript.

15/11: terminei a aula "110. Usando Q para mesclar AND e OR com consultas complexas e filtros já", o exercício "Exercício de programação 1: Complete o código", e o teste "Teste 13: Sobre request, models, views, testes e mais" em Django.

19/11: continuei na aula "307. Fetch API #02" em JavaScript.


fala mais, fala mais, ele vai lá e faiz


É HORA DE VOLTAR AO HTML! TANTO O MÓDULO 4 DO CURSO DO GUANABARA QUANTO FLEX BOX E GRID LAYOUT


EM JAVASCRIPT, REVISAR SEÇÃO DE DOM DEPOIS DE TERMINA-LA(revisar rapidamente).


Abao em Tóquio

Study Pomodoro


META MARÇO:

Em JavaScript: 
	
	terminar revisão de objetos OK
	terminar revisão de ESNext OK
	terminar seção de conceitos sobre web

Em Django:

	chegar até a aula 75

JAVASCRIPT: O QUE FAZER AGORA? aparentemente eu gravei mesmo o conteúdo das seções anteriores, e isso é bom! Mas mesmo assim vou fazer uma revisão rápida de todos os conteúdos das seções de função, objeto, e ESNext. revisões rápidas, de até 10 minutos cada conteúdo, como eu gravei este conteúdo vai ser muito mais rápido revisar. Eu não preciso ver a aula, é só testar se ainda lembro de cada conteúdo direto no Visual Studio Code. DEPOIS DISSO: fazer a seção que junta JavaScript, HTML e CSS


ANTES DE PASSAR PRA SEÇÃO DE HTML,CSS, E JAVASCRIPT NO CURSO, FAÇA UMA GRANDE REVISÃO DOS CONTEÚDOS ESTUDOS ATÉ O MOMENTO(tirando node pq vc já está fazendo as revisões corretamente)

PRÓXIMO PERIODO DE SEGUNDAS REVISÕES: ?(começando ???)

PRÓXIMO PERIODO DE TERCEIRAS REVISÕES: 20/12(começando 10/11)

PRÓXIMO PERIODO DE QUARTAS REVISÕES: 22/01/23

REVISAR OS CONTEÚDOS EM DJANGO TAMBÉM, NÃO APENAS EM JAVASCRIPT, SE NÃO VOCÊ VAI ESQUECER DAS COISAS DE DJANGO

DEPOIS QUE ACABAR A SEÇÃO DE NODE, FAZER O PROJETO DE HTML E CSS COM JAVASCRIPT DA SEÇÃO QUE INTEGRA AS 3 TECNOLOGIAS, E DAÍ SIM AVANÇAR PRA AJAX

EM DJANGO, FAZER O PROJETO RECIPES DANDO "CTRL+C" E "CTRL+V", DAÍ QUANDO ACABAR FAZER O MÓDULO 4 DO CURSO DE HMTL E TAMBÉM APRENDER FLEXBOX E GRID LAYOUT NA SEÇÃO DE CSS DO CURSO DE JAVASCRIPT, E ENTÃO VOLTAR E FAZER O PROJETO RECIPES DO ZERO E SOZINHO, FAZENDO O HTML E TUDO!





